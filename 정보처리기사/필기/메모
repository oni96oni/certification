01. 나선형모델 -> 폭포수
02. 구현 -> 설계
03. 폭포수모델
04. 애자일 -> 구조적 방법론
05. 1:o tdd
    2:ㅈ refactioring
    3:ㄷ CI
06. 스크럼
07. 델파이
08. 기능점수
09. PERT
10. 14일 (임계경로 : 제일 오래걸리는길)
11. 200

01. Observer패턴
02. 요구사항에는 기능적, 비기능적요구사항이 있다.
03. 디자인팽터은 생성, 구조, 행위
04. 팩토리 메서드패턴은 상위 클래스에서 인터페이스만 정의, 실제생성은 서브클래스에서
05. 반복적으로 사용되는 객체들의 상호 작용을 패턴화 -> 행위
06. Bridge : 추상, 실제구현부분 독립 확장가능, Obeserver : 객체 상태 변경시 그 객체 의존하는 다른객체 연락
07. 객체의 대리자를 이용하여 원객체 작업처리 : Proxy
08. Singleton : 전역변수를 사용하지않고 객체를 하나만 생성 , Vistor : 

01. 프로세스뷰 : 시스템의 비기능적속성, 자원 효율적인 사용, 병행 실행, 비동기, 이벤트 처리등을 표현, 개발자 시스템 통합자 관점
02. 계층화패턴 : 서로 마주 보는 두 개의 계층 사이에서만 상호작용이루어짐
03. MVC : 모델 뷰 컨트롤러, 각 부분 서로 영향X 개발작업수행가능
04. Singleton : 전역변수사용x, 객체하나만 생성, 생성된 객체 어디서든지 참조
05. 팩토리메서드 : 상위클래스에서 인터페이스 정의, 하위클래스에서 인스턴스 생성
06. 빌더패턴 : 복잡한 인스턴스 조립, 복합객체생성시 객체 생성과 객체 구현방법을 분리
07. 전략패턴 : 알고리즘군정의, 각각 캡슐화 필요할떄 서로 교환해서 사용
08. 템플릿메서드 : 일부분 서브클래스로 캡슐화, 전체 구조 변경하지않는 패턴
09. 어댑터패턴 : 기존에 생성된 클래스 재사용, 중간다리 인터페이스
10. 기능 1,3 비기능 2,4
11. 요구사항도출
12. 브레인스토밍
13. 비정명 명세
14. 요구사항 명세서
15. 인스펙션

01. 소프트웨어 생명주기모델 : 폭 프 나 
02. 요설구테유
03. 나선형모델 : 위험최소화 
04. 정보시스템 개발에 필요한 관리 절차와 작업기법 : 정보공학방법론
05. 메타포어 : 공통적인 이름체계 통해 고객과 개발자 간의 의사소통 원활
06. XP 스크럼 린
07. 주 공정법(CPM) : 얽혀있는 프로젝트 일정 계산기법
08. 10000 % 5 % 250 = 8개월
09. 아키텍처 기술표준?
10. 4+1뷰 : 설계자, 개발자관점 = 논리뷰
11. 데이터스트림 : 파이프-필터패턴
12. 경험없는조직 비용평가모델 : SAAM
13. 빌더패턴 : 복잡인스턴스, 복합객체, 객체 생성과 구현방법분리
14. 팩토리메서드패턴 : 상위 클래스에서 객체생성 인터페이스 정의, 하위클래스에서 인스턴스 생성, 오버라이딩
15. 요구사항 분석
16. 기능 : 업무 1 4 , 비기능 : 개발 2 3
17. 요구사항 도출, 요구사항 명세 (요구사항 도 분 명 확)
18. 롤플레잉 : 연기
19. 직접대화 : 인터뷰
20. 비정형 : 자연어, 정형 : 수학
21. 워크스루 : 검토자료 회의전 사전검토

화면설계

UI 요구사항 확인
01. ui설계원칙 : 직유학유
02. 쉽게 이해하고 사용가능해야한다 : 직관성
03. UX, UI
04. GUI : 사용자가 그래픽 환경기반으로 이용
05. NUI : 신체 활용 사용자 인터페이스

01. OUI : 유기적 상호작용기반 인터페이스, 모든사물이 입출력장치
02. 인터페이스 설계기본원칙 : 학습성, 유연성
03. 이해관계자 화면구성협의 ui 화면 설계방식 : 와이어 프레임
04. 사용성의 부특성에는 이해, 학습, 운용성이있다.
05. ui설계지침 주요기능을 메인화면에 노출 쉬운조작 : 가시성
06. 스왓분석 : 강점 약점 기회 위협 경영전략, 시나리오설계 : 시나리오플래닝
07. 디자이너 개발자 최종참고 문서 : 스토리보드

93p

UI 설계
01. 